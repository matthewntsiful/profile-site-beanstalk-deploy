name: Deploy to Elastic Beanstalk
on:
  push:
    branches:
      - main
    paths:
      - '**/*.php'
      - '**/*.css'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths:
      - '**/*.php'
      - '**/*.css'
      - '.github/workflows/**'
    types:
      - opened
      - synchronize
      - reopened

env:
  AWS_APP_NAME: profile-site-app
  AWS_ENV_NAME: Profile-site-app-env

jobs:
  snyk_scan:
    name: Snyk PHP Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Composer dependencies
        run: |
          if [ -f composer.json ]; then composer install --no-interaction --no-progress; fi
      - name: Run Snyk to check for PHP vulnerabilities
        uses: snyk/actions/php@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects

  deploy:
    name: Deploy to Elastic Beanstalk
    runs-on: ubuntu-latest
    needs: snyk_scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Zip application files
        run: |
          zip -r application.zip . \
            -x "*.git*" \
            -x "*.md" \
            -x ".github/*"
      - name: Install Composer dependencies
        run: |
          if [ -f composer.json ]; then composer install --no-interaction --no-progress; fi
      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          region: ${{ secrets.AWS_REGION }}
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: ${{ env.AWS_APP_NAME }}
          environment_name: ${{ env.AWS_ENV_NAME }}
          version_label: v-${{ github.run_number }}
          existing_bucket_name: ${{ secrets.EB_BUCKET_NAME }}
          deployment_package: application.zip

  slack_notification:
    name: Slack Notification
    needs: [deploy]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send Slack notification
        uses: ./.github/workflows/slack-notify.yml
        with:
          status: ${{ job.status }}
          environment: ${{ env.AWS_ENV_NAME }}
          app_name: ${{ env.AWS_APP_NAME }}
###